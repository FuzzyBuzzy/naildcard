/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const ACTION_GET_SETTINGS: typeof import('./constants/chrome')['ACTION_GET_SETTINGS']
  const ACTION_UPDATE_SETTINGS: typeof import('./constants/chrome')['ACTION_UPDATE_SETTINGS']
  const ASPECT_RATIO_BUTTON: typeof import('./constants/nai')['ASPECT_RATIO_BUTTON']
  const DANBOORU_CSV: typeof import('./constants/danbooru')['DANBOORU_CSV']
  const DANBOORU_URL: typeof import('./constants/danbooru')['DANBOORU_URL']
  const DanbooruTagCategory: typeof import('./constants/enums')['DanbooruTagCategory']
  const EffectScope: typeof import('vue')['EffectScope']
  const ElMessage: typeof import('element-plus/es')['ElMessage']
  const GENERATE_BUTTON_TEXTS_EN: typeof import('./constants/nai')['GENERATE_BUTTON_TEXTS_EN']
  const GENERATE_BUTTON_TEXTS_JP: typeof import('./constants/nai')['GENERATE_BUTTON_TEXTS_JP']
  const NAI_URL: typeof import('./constants/nai')['NAI_URL']
  const NEGATIVE_PROMPT_BUTTON_TEXT_EN: typeof import('./constants/nai')['NEGATIVE_PROMPT_BUTTON_TEXT_EN']
  const NEGATIVE_PROMPT_BUTTON_TEXT_JP: typeof import('./constants/nai')['NEGATIVE_PROMPT_BUTTON_TEXT_JP']
  const TAG_HELPER_SUGGESTION_COUNT: typeof import('./constants/settings')['TAG_HELPER_SUGGESTION_COUNT']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createDynamicPrompt: typeof import('./content/dynamic-prompts')['createDynamicPrompt']
  const createDynamicPromptButton: typeof import('./content/content-scripts')['createDynamicPromptButton']
  const createPrompt: (typeof import('./content/dynamic-prompts'))['createPrompt']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getGenerateButton: typeof import('./content/content-scripts')['getGenerateButton']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const insertDanbooruTagToTextarea: typeof import('./utils/utils')['insertDanbooruTagToTextarea']
  const insertPrompt: typeof import('./content/content-scripts')['insertPrompt']
  const isNegativePromptVisible: typeof import('./content/content-scripts')['isNegativePromptVisible']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const parseWildcardsString: typeof import('./utils/utils')['parseWildcardsString']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const removeCommentLines: typeof import('./content/dynamic-prompts')['removeCommentLines']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useClipboardCopy: typeof import('./composables/useClipboardCopy')['useClipboardCopy']
  const useControlBracket: typeof import('./composables/useControlBracket')['useControlBracket']
  const useControlEnter: typeof import('./composables/useControlEnter')['useControlEnter']
  const useCopyLine: typeof import('./composables/useCopyLine')['useCopyLine']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useCutLine: typeof import('./composables/useCutLine')['useCutLine']
  const useInputHistory: typeof import('./composables/useInputHistory')['useInputHistory']
  const useMoveLine: typeof import('./composables/useMoveLine')['useMoveLine']
  const useSlots: typeof import('vue')['useSlots']
  const useToggleComment: typeof import('./composables/useToggleComment')['useToggleComment']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, VNode, WritableComputedRef } from 'vue'
  import('vue')
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface ComponentCustomProperties {
    readonly ACTION_GET_SETTINGS: UnwrapRef<typeof import('./constants/chrome')['ACTION_GET_SETTINGS']>
    readonly ACTION_UPDATE_SETTINGS: UnwrapRef<typeof import('./constants/chrome')['ACTION_UPDATE_SETTINGS']>
    readonly ASPECT_RATIO_BUTTON: UnwrapRef<typeof import('./constants/nai')['ASPECT_RATIO_BUTTON']>
    readonly DANBOORU_CSV: UnwrapRef<typeof import('./constants/danbooru')['DANBOORU_CSV']>
    readonly DANBOORU_URL: UnwrapRef<typeof import('./constants/danbooru')['DANBOORU_URL']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly ElMessage: UnwrapRef<typeof import('element-plus/es')['ElMessage']>
    readonly GENERATE_BUTTON_TEXTS_EN: UnwrapRef<typeof import('./constants/nai')['GENERATE_BUTTON_TEXTS_EN']>
    readonly GENERATE_BUTTON_TEXTS_JP: UnwrapRef<typeof import('./constants/nai')['GENERATE_BUTTON_TEXTS_JP']>
    readonly NAI_URL: UnwrapRef<typeof import('./constants/nai')['NAI_URL']>
    readonly NEGATIVE_PROMPT_BUTTON_TEXT_EN: UnwrapRef<typeof import('./constants/nai')['NEGATIVE_PROMPT_BUTTON_TEXT_EN']>
    readonly NEGATIVE_PROMPT_BUTTON_TEXT_JP: UnwrapRef<typeof import('./constants/nai')['NEGATIVE_PROMPT_BUTTON_TEXT_JP']>
    readonly TAG_HELPER_SUGGESTION_COUNT: UnwrapRef<typeof import('./constants/settings')['TAG_HELPER_SUGGESTION_COUNT']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createDynamicPrompt: UnwrapRef<typeof import('./content/dynamic-prompts')['createDynamicPrompt']>
    readonly createDynamicPromptButton: UnwrapRef<typeof import('./content/content-scripts')['createDynamicPromptButton']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly getGenerateButton: UnwrapRef<typeof import('./content/content-scripts')['getGenerateButton']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly insertDanbooruTagToTextarea: UnwrapRef<typeof import('./utils/utils')['insertDanbooruTagToTextarea']>
    readonly insertPrompt: UnwrapRef<typeof import('./content/content-scripts')['insertPrompt']>
    readonly isNegativePromptVisible: UnwrapRef<typeof import('./content/content-scripts')['isNegativePromptVisible']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly parseWildcardsString: UnwrapRef<typeof import('./utils/utils')['parseWildcardsString']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly removeCommentLines: UnwrapRef<typeof import('./content/dynamic-prompts')['removeCommentLines']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useClipboardCopy: UnwrapRef<typeof import('./composables/useClipboardCopy')['useClipboardCopy']>
    readonly useControlBracket: UnwrapRef<typeof import('./composables/useControlBracket')['useControlBracket']>
    readonly useControlEnter: UnwrapRef<typeof import('./composables/useControlEnter')['useControlEnter']>
    readonly useCopyLine: UnwrapRef<typeof import('./composables/useCopyLine')['useCopyLine']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useCutLine: UnwrapRef<typeof import('./composables/useCutLine')['useCutLine']>
    readonly useInputHistory: UnwrapRef<typeof import('./composables/useInputHistory')['useInputHistory']>
    readonly useMoveLine: UnwrapRef<typeof import('./composables/useMoveLine')['useMoveLine']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useToggleComment: UnwrapRef<typeof import('./composables/useToggleComment')['useToggleComment']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
declare module '@vue/runtime-core' {
  interface ComponentCustomProperties {
    readonly ACTION_GET_SETTINGS: UnwrapRef<typeof import('./constants/chrome')['ACTION_GET_SETTINGS']>
    readonly ACTION_UPDATE_SETTINGS: UnwrapRef<typeof import('./constants/chrome')['ACTION_UPDATE_SETTINGS']>
    readonly ASPECT_RATIO_BUTTON: UnwrapRef<typeof import('./constants/nai')['ASPECT_RATIO_BUTTON']>
    readonly DANBOORU_CSV: UnwrapRef<typeof import('./constants/danbooru')['DANBOORU_CSV']>
    readonly DANBOORU_URL: UnwrapRef<typeof import('./constants/danbooru')['DANBOORU_URL']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly ElMessage: UnwrapRef<typeof import('element-plus/es')['ElMessage']>
    readonly GENERATE_BUTTON_TEXTS_EN: UnwrapRef<typeof import('./constants/nai')['GENERATE_BUTTON_TEXTS_EN']>
    readonly GENERATE_BUTTON_TEXTS_JP: UnwrapRef<typeof import('./constants/nai')['GENERATE_BUTTON_TEXTS_JP']>
    readonly NAI_URL: UnwrapRef<typeof import('./constants/nai')['NAI_URL']>
    readonly NEGATIVE_PROMPT_BUTTON_TEXT_EN: UnwrapRef<typeof import('./constants/nai')['NEGATIVE_PROMPT_BUTTON_TEXT_EN']>
    readonly NEGATIVE_PROMPT_BUTTON_TEXT_JP: UnwrapRef<typeof import('./constants/nai')['NEGATIVE_PROMPT_BUTTON_TEXT_JP']>
    readonly TAG_HELPER_SUGGESTION_COUNT: UnwrapRef<typeof import('./constants/settings')['TAG_HELPER_SUGGESTION_COUNT']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createDynamicPrompt: UnwrapRef<typeof import('./content/dynamic-prompts')['createDynamicPrompt']>
    readonly createDynamicPromptButton: UnwrapRef<typeof import('./content/content-scripts')['createDynamicPromptButton']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly getGenerateButton: UnwrapRef<typeof import('./content/content-scripts')['getGenerateButton']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly insertDanbooruTagToTextarea: UnwrapRef<typeof import('./utils/utils')['insertDanbooruTagToTextarea']>
    readonly insertPrompt: UnwrapRef<typeof import('./content/content-scripts')['insertPrompt']>
    readonly isNegativePromptVisible: UnwrapRef<typeof import('./content/content-scripts')['isNegativePromptVisible']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly parseWildcardsString: UnwrapRef<typeof import('./utils/utils')['parseWildcardsString']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly removeCommentLines: UnwrapRef<typeof import('./content/dynamic-prompts')['removeCommentLines']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useClipboardCopy: UnwrapRef<typeof import('./composables/useClipboardCopy')['useClipboardCopy']>
    readonly useControlBracket: UnwrapRef<typeof import('./composables/useControlBracket')['useControlBracket']>
    readonly useControlEnter: UnwrapRef<typeof import('./composables/useControlEnter')['useControlEnter']>
    readonly useCopyLine: UnwrapRef<typeof import('./composables/useCopyLine')['useCopyLine']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useCutLine: UnwrapRef<typeof import('./composables/useCutLine')['useCutLine']>
    readonly useInputHistory: UnwrapRef<typeof import('./composables/useInputHistory')['useInputHistory']>
    readonly useMoveLine: UnwrapRef<typeof import('./composables/useMoveLine')['useMoveLine']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useToggleComment: UnwrapRef<typeof import('./composables/useToggleComment')['useToggleComment']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
